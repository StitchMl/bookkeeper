name: SonarQube
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout sorgenti
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0          # Sonar vuole l'intera history per il blame

      # 2) Dipendenze di sistema per C/C++, Python, Node, .NET, Ruby
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake libboost-all-dev libssl-dev \
            python3 python3-pip ruby-full nodejs npm \
            dotnet-sdk-8.0                                   # .NET 8 supporta Avro C#
          # (tutti pacchetti citati nel BUILD.md ufficiale)

      # 3) Installazione MULTI-JDK (8 facoltativo, 11–17–21 obbligatori)
      - name: Setup JDK 8 11 17 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: |
            8
            11
            17
            21

      # 4) Genera ~/.m2/toolchains.xml con i path auto-esposti
      - name: Write toolchains.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/toolchains.xml <<EOF
          <toolchains>
            <toolchain>
              <type>jdk</type><provides><version>11</version></provides>
              <configuration><jdkHome>${JAVA_HOME_11_X64}</jdkHome></configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type><provides><version>17</version></provides>
              <configuration><jdkHome>${JAVA_HOME_17_X64}</jdkHome></configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type><provides><version>21</version></provides>
              <configuration><jdkHome>${JAVA_HOME_21_X64}</jdkHome></configuration>
            </toolchain>
          </toolchains>
          EOF

      # 5) Cache della repo Maven
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 6) Build completo + Sonar; 2 retry automatici sui test flaky
      - name: Build everything & run SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -X -e -ntp clean install \
              -Drat.skip=false \
              -Dsurefire.rerunFailingTestsCount=2 \
              org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.projectKey=StitchMl_bookkeeper \
              -Dsonar.login=$SONAR_TOKEN
